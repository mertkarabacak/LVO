# -*- coding: utf-8 -*-
"""LVO_mRS_Preprocess (Imaging Only).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10Le5SZhe3DfD4wM6vUnDII8lTfYR_fvO
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import pandas as pd

from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import MinMaxScaler
from sklearn.impute import KNNImputer

from matplotlib import pyplot as plt

pd.set_option('display.max_rows', None)

#Open csv file.

data = pd.read_csv("/content/drive/MyDrive/LVO/Data/LVO (Imaging Only).csv", index_col=0, encoding = 'latin1', low_memory = False)

#Check data shape.

data.shape

#Show columns.

print(list(data.columns))

#Check data for '90-day Modified Rankin Score'.

data['90-day mRS'].value_counts(dropna=False)

#Drop patients with unknown '90-day Modified Rankin Score'.

data = data[data['90-day mRS'].notna()]
data.shape

#Convert '90-day mRS' into categorical data in a column named '90-day mRS Category'.

data.loc[data['90-day mRS'] <= 2, '90-day mRS Category'] = 'Low'
data.loc[data['90-day mRS'] > 2, '90-day mRS Category'] = 'High'

data = data.drop(['90-day mRS'], axis = 1)

#Define numerical and categorical columns.

num_cols = list(data.select_dtypes('number').columns)
print('Numerical columns: {}'.format(num_cols))

cat_cols = list(data.select_dtypes('object').columns)
print('Categorical columns: {}'.format(cat_cols))

#Remove outcomes.

num_cols_remove = []
cat_cols_remove = ['90-day mRS Category']

num_cols = [i for i in num_cols if i not in num_cols_remove]
cat_cols = [i for i in cat_cols if i not in cat_cols_remove]

#Check missing values for numerical columns.

missing_num = data[num_cols].isnull().mean().round(4).mul(100).sort_values(ascending=False)

print(missing_num, '\n')

missing_num = pd.DataFrame(missing_num)

missing_num.columns = ['Value']

missing_num = missing_num[missing_num['Value'] > 0]

print('Numerical variables with missing values: ', list(missing_num.index), '\n')

print('Number of numerical variables with missing values: ', len(list(missing_num.index)), '\n')

missing_num = missing_num[missing_num['Value'] > 25]

missing_num = list(missing_num.index)

print('Excluded numerical variables: ', missing_num)

#Drop numerical columns with missing values over 25%.

data.drop(missing_num, axis=1, inplace=True)

#Define new numerical columns.

num_cols = [x for x in num_cols if x not in missing_num]

#Impute missing numerical values.

num_imputer = KNNImputer(n_neighbors=5, weights='uniform', metric='nan_euclidean')
data[num_cols] = num_imputer.fit_transform(data[num_cols])

#Check missing values for categorical columns.

missing_cat = data[cat_cols].isnull().mean().round(4).mul(100).sort_values(ascending=False)

print(missing_cat, '\n')

missing_cat = pd.DataFrame(missing_cat)

missing_cat.columns = ['Value']

missing_cat = missing_cat[missing_cat['Value'] > 0]

print('Categorical variables with missing values: ', list(missing_cat.index), '\n')

print('Number of categorical variables with missing values: ', len(list(missing_cat.index)), '\n')

missing_cat = missing_cat[missing_cat['Value'] > 25]

missing_cat = list(missing_cat.index)

print('Excluded categorical variables: ', missing_cat)

#Drop categorical columns with missing values over 25%.

data.drop(missing_cat, axis=1, inplace=True)

#Define new categorical columns.

cat_cols = [x for x in cat_cols if x not in missing_cat]

#Replace missing categorical values with 'Unknown'.

for col in cat_cols:
    data[col].fillna(value='Unknown', inplace=True)

#Save imputed data.

data.to_csv('/content/drive/MyDrive/LVO/Data/mRS_imaging_data_imputed.csv')

#Normalize data.

data[num_cols] = MinMaxScaler().fit_transform(data[num_cols])

#One hot encoding for categorical values.

le = LabelEncoder()

data[cat_cols] = data[cat_cols].apply(le.fit_transform)

#Save final data.

data.to_csv('/content/drive/MyDrive/LVO/Data/mRS_imaging_data_final.csv')